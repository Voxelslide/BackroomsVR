%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3acd6fe57257048db802c1c4c2b75248, type: 3}
  m_Name: TestShaderGenerator
  m_EditorClassIdentifier: 
  shaderName: TestShader
  shaderReference: {fileID: 4800000, guid: 0977986aa0a4c22468e5c391ed0eefbc, type: 3}
  shaderTemplate: uRaymarching/Forward/Standard
  variables:
  - key: Name
    value: TestShader
  - key: LOD
    value: 200
  - key: LightModel
    value: Standard
  - key: Option
    value: 
  - key: SurfaceFunctionInput
    value: SurfaceOutputStandard
  - key: RenderType
    value: Opaque
  - key: RenderQueue
    value: Geometry
  - key: ObjectShape
    value: CUBE
  - key: RaymarchingShaderDirectory
    value: Packages/com.hecomi.uraymarching/Runtime/Shaders/Include/Legacy
  conditions:
  - key: UseTesselation
    value: 0
  - key: Blend
    value: 0
  - key: ShadowCaster
    value: 1
  - key: FullScreen
    value: 0
  - key: WorldSpace
    value: 0
  - key: FollowObjectScale
    value: 0
  - key: CameraInsideObject
    value: 1
  - key: UseRaymarchingDepth
    value: 1
  - key: UseCameraDepthTexture
    value: 0
  - key: DisableViewCulling
    value: 0
  - key: SphericalHarmonicsPerPixel
    value: 1
  - key: UseGrabPass
    value: 0
  - key: ForwardAdd
    value: 1
  - key: FallbackToStandardShader
    value: 1
  blocks:
  - key: SurfaceFunction
    value: "fixed4 c = tex2D (_MainTex, IN.uv_MainTex) * _Color;\r\no.Albedo = c.rgb;\r\no.Metallic
      = _Metallic;\r\no.Smoothness = _Glossiness;\r\no.Alpha = c.a;\r\no.Normal =
      UnpackNormal(tex2D(_NormalTex, IN.uv_MainTex));\r"
    folded: 0
  - key: Properties
    value: // _Color2("Color2", Color) = (1.0, 1.0, 1.0, 1.0)
    folded: 1
  - key: DistanceFunction
    value: "float DeathStar(float3 p2, float ra, float rb, float d )\n{\n    // sampling
      independent computations (only depend on shape)\n    float a = (ra*ra - rb*rb
      + d*d)/(2.0*d);\n    float b = sqrt(max(ra*ra-a*a,0.0));\n  \t\n    // sampling
      dependant computations\n    float2 p = float2( p2.y, length(p2.xz) );\n   
      if(p.x*b - p.y*a > d*max(b-p.y,0.0) )\n      return length(p-float2(a,b));\n   
      else\n      return max( (length(p          )-ra),\n               -(length(p-float2(d,0))-rb));\n}\ninline
      float DistanceFunction(float3 pos)\n{\n float t = _Time.x;\n float r = abs(sin(6*PI*t))/3;\nreturn
      DeathStar(pos, 0.1, r, 0.23);\n}"
    folded: 1
  - key: PostEffect
    value: 'inline void PostEffect(RaymarchInfo ray, inout PostEffectOutput o)

      {

      }'
    folded: 0
  constants: {fileID: 11400000, guid: 9c8b2f5a7a56c4e21bee7ca4ccfc6640, type: 2}
  basicFolded: 1
  conditionsFolded: 1
  variablesFolded: 1
  materialsFolded: 0
  constantsFolded: 0
