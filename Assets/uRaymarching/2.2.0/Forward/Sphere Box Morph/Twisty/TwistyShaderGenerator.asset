%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3acd6fe57257048db802c1c4c2b75248, type: 3}
  m_Name: TwistyShaderGenerator
  m_EditorClassIdentifier: 
  shaderName: TwistyShader
  shaderReference: {fileID: 4800000, guid: 5dbe178f0d02a0b498a0d727ee86b8a3, type: 3}
  shaderTemplate: uRaymarching/Forward/Standard
  variables:
  - key: Name
    value: TwistyShader
  - key: LOD
    value: 200
  - key: LightModel
    value: Standard
  - key: Option
    value: 
  - key: SurfaceFunctionInput
    value: SurfaceOutputStandard
  - key: RenderType
    value: Opaque
  - key: RenderQueue
    value: Geometry
  - key: ObjectShape
    value: CUBE
  - key: RaymarchingShaderDirectory
    value: Packages/com.hecomi.uraymarching/Runtime/Shaders/Include/Legacy
  conditions:
  - key: UseTesselation
    value: 0
  - key: Blend
    value: 0
  - key: ShadowCaster
    value: 1
  - key: FullScreen
    value: 0
  - key: WorldSpace
    value: 0
  - key: FollowObjectScale
    value: 1
  - key: CameraInsideObject
    value: 1
  - key: UseRaymarchingDepth
    value: 1
  - key: UseCameraDepthTexture
    value: 0
  - key: DisableViewCulling
    value: 0
  - key: SphericalHarmonicsPerPixel
    value: 1
  - key: UseGrabPass
    value: 0
  - key: ForwardAdd
    value: 1
  - key: FallbackToStandardShader
    value: 0
  blocks:
  - key: SurfaceFunction
    value: "fixed4 c = tex2D (_MainTex, IN.uv_MainTex) * _Color;\r\no.Albedo = c.rgb;\r\no.Metallic
      = _Metallic;\r\no.Smoothness = _Glossiness;\r\no.Alpha = c.a;\r\no.Normal =
      UnpackNormal(tex2D(_NormalTex, IN.uv_MainTex));\r"
    folded: 0
  - key: Properties
    value: // _Color2("Color2", Color) = (1.0, 1.0, 1.0, 1.0)
    folded: 0
  - key: DistanceFunction
    value: "float3 twistY(float3 p, float power)\n{\n    float s = sin(power * p.y);\n   
      float c = cos(power * p.y);\n    float3x3 m = float3x3(\n          c, 0.0, 
      -s,\n        0.0, 1.0, 0.0,\n          s, 0.0,   c\n    );\n    return mul(m,
      p);\n}\nfloat3 rotate(float3 p, float angle, float3 axis)\n{\n    float3 a
      = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n   
      float r = 1.0 - c;\n    float3x3 m = float3x3(\n        a.x * a.x * r + c,\n       
      a.y * a.x * r + a.z * s,\n        a.z * a.x * r - a.y * s,\n        a.x * a.y
      * r - a.z * s,\n        a.y * a.y * r + c,\n        a.z * a.y * r + a.x * s,\n       
      a.x * a.z * r + a.y * s,\n        a.y * a.z * r - a.x * s,\n        a.z * a.z
      * r + c\n    );\n    return mul(m, p);\n}\nfloat sdTorus( float3 p, float2
      t )\n{\n    float2 q = float2(length(p.yz)-t.x,p.x);\n    return length(q)-t.y;\n}\ninline
      float DistanceFunction(float3 pos)\n{\n    float t = _Time.x*20;\n    float3
      axis = float3(0, 1, 0);\n    return sdTorus(rotate(twistY(pos, 10), t, axis), 
      float2(0.2, 0.05));\n}"
    folded: 1
  - key: PostEffect
    value: 'inline void PostEffect(RaymarchInfo ray, inout PostEffectOutput o)

      {

      }'
    folded: 0
  constants: {fileID: 11400000, guid: 9c8b2f5a7a56c4e21bee7ca4ccfc6640, type: 2}
  basicFolded: 1
  conditionsFolded: 1
  variablesFolded: 1
  materialsFolded: 1
  constantsFolded: 0
